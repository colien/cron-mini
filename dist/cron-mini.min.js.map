{"version":3,"file":"./cron-mini.min.js","mappings":"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","sources":["webpack://CronMini/webpack/universalModuleDefinition","webpack://CronMini/./src/cronParser.js","webpack://CronMini/./src/customTimer.js","webpack://CronMini/./src/utils.js","webpack://CronMini/webpack/bootstrap","webpack://CronMini/./src/cronActuator.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"CronMini\"] = factory();\n\telse\n\t\troot[\"CronMini\"] = factory();\n})(self, function() {\nreturn ","/** cron 表达式解析\r\n*/\r\n\r\nexports.CronParser = CronParser;\r\n\r\nfunction CronParser (cron){\r\n  if(!(this instanceof CronParser)){\r\n    return new CronParser(cron)\r\n  }\r\n  this.cron = cron;\r\n  var timeArea = cronParse(this.cron);\r\n  this.timeEnum  = calcTime(timeArea);\r\n}\r\n\r\n// 解析 cron 表达式\r\nfunction cronParse (cron){\r\n  var crons = cron.split(\" \");\r\n  var rex = /^((([0-9]{1,2}([-\\/][0-9]{1,2})?)(,[0-9]{1,2}([-\\/][0-9]{1,2})?)*)|[\\*\\?])$/;\r\n  var cronList = [];\r\n  var len = crons.length;\r\n  // 如果后面的没有填，自动的回填 *\r\n  for(var n = len; n < 6; n++){\r\n    crons[n].push(\"*\");\r\n  }\r\n  // 解析里面的每一项\r\n  for(var i = 0; i < crons.length; i++){\r\n    var item = crons[i];\r\n    if(!rex.test(item)){\r\n      return ;\r\n    }\r\n    // 所有的日期都按 0-60 算，后面会截取有效的日期\r\n    if(item == \"*\" || item == \"?\"){  // 不限\r\n      cronList.push(parserItem(\"0-60\"));\r\n      continue;\r\n    }\r\n    // 逗号的最大的分类，先解析逗号\r\n    if(item.indexOf(\",\") > -1){// 枚举\r\n      var times = item.split(/[\\,]/g);\r\n      var arr = []\r\n      for(var n = 0; n < times.length; n++){\r\n        arr = arr.concat(parserItem(times[n]));\r\n      }\r\n      cronList.push(arr);\r\n      continue\r\n    }\r\n    cronList.push(parserItem(item));\r\n  }\r\n  return cronList;\r\n}\r\n// 解析每一项\r\nfunction parserItem(item){\r\n  var arr = [];\r\n  if(item.indexOf(\"-\") > -1){ //范围\r\n    var times = item.split(/[-]/g);\r\n    var start = parseInt(times[0]);\r\n    var end = Math.min(parseInt(times[1]), 60); // 减少循环次数\r\n    for(var x = start; x <= end; x++){\r\n      arr.push(x);\r\n    }\r\n    return arr;\r\n  }\r\n  if(item.indexOf(\"/\") > -1){ // 间隔\r\n    var times = item.split(/[\\/]/g);\r\n    var start = parseInt(times[0]);\r\n    var step = parseInt(times[1]);\r\n    for(var x = start; x <= 60; x = x + step){\r\n      arr.push(x);\r\n    }\r\n    return arr;\r\n  } \r\n  // 指定的时间\r\n  return [parseInt(item)];\r\n}\r\n\r\n// 计算定时任务时间\r\nfunction calcTime (cronList){\r\n  if(!cronList){\r\n    return {};\r\n  }\r\n  var data = {};\r\n  for(var i = 0; i < cronList.length; i++){\r\n    var item = cronList[i];\r\n    if(i == 0){ // 秒\r\n      data.second = normalizaTime(item, 0, 59);\r\n    }else if(i == 1){ // 分钟\r\n      data.minute = normalizaTime(item, 0, 59);\r\n    }else if(i == 2){ // 小时\r\n      data.hour = normalizaTime(item, 0, 23);\r\n    }else if(i == 3){ // 天\r\n      data.day = normalizaTime(item, 1, 31);\r\n    }else if(i == 4){ // 月\r\n      data.month = normalizaTime(item, 1, 12);\r\n    }else{  // 星期\r\n      data.week = normalizaTime(item, 1, 7);\r\n    }\r\n  }\r\n  return data;\r\n}\r\n\r\n// 规范数据\r\nfunction normalizaTime(times, min, max){\r\n  var data = {\r\n    times : [],\r\n  };\r\n  for(var i = 0; i < times.length; i++){\r\n    var item = times[i];\r\n    if(item >= min && item <= max){\r\n      data.times.push(item);\r\n    }\r\n  }\r\n  data.times.sort(function(a, b){return a - b});\r\n  return data;\r\n}\r\n","/** opts 的格式\r\n  {\r\n    timeout : x\r\n    interval : x\r\n  }\r\n*/\r\nfunction CustomTimer(opts, cb){\r\n  if(!(this instanceof CustomTimer)){\r\n    return new CustomTimer(opts);\r\n  }\r\n  this.timeout = null;\r\n  this.interval = null;\r\n  this.opts = opts;\r\n  this.cb = cb;\r\n}\r\n\r\nCustomTimer.prototype.setTimeout = function (fn, time){\r\n  this.timeout = setTimeout(function(){\r\n    fn();\r\n  }, time);\r\n  return this.timeout;\r\n}\r\nCustomTimer.prototype.setInterval = function (fn, time){\r\n  this.interval = setInterval(function (){\r\n    fn();\r\n  }, time);\r\n  return this.interval;\r\n}\r\nCustomTimer.prototype.clear = function(){\r\n  this.clearInterval();\r\n  this.clearTimeout();\r\n}\r\nCustomTimer.prototype.clearInterval = function(){\r\n  clearInterval(this.interval);\r\n  this.interval = null;\r\n}\r\nCustomTimer.prototype.clearTimeout = function(){\r\n  clearTimeout(this.timeout);\r\n  this.timeout = null;\r\n}\r\nCustomTimer.prototype.start = function(){\r\n  var self = this;\r\n  var opts = this.opts;\r\n  // 有 timeout 的定时任务 type [1,2,3]\r\n  if(opts.timeout){ \r\n    // type [1] 的定时任务才会进来\r\n    if(opts.interval){\r\n      self.setTimeout(function(){\r\n        self.setInterval(function(){\r\n          self.cb();\r\n        }, opts.interval);\r\n        if(opts.immedi){\r\n          self.cb();\r\n        }\r\n        // 定时任务执行完了需要删除\r\n        self.clearTimeout();\r\n      }, opts.timeout);\r\n    }else{\r\n      self.setTimeout(function(){\r\n        self.cb();\r\n        self.clearTimeout();\r\n      }, opts.timeout);\r\n    }\r\n    return;\r\n  }\r\n  // 普通的 interval 定时 type [1]\r\n  if(opts.interval){\r\n    self.setInterval(function(){\r\n      self.cb();\r\n    }, opts.interval);\r\n    return;\r\n  }\r\n  self.cb();\r\n}\r\n\r\nexports.CustomTimer = CustomTimer;","function isObject(obj){\r\n  return Object.prototype.toString.call(obj) == \"[object Object]\" && obj !== null;\r\n}\r\n\r\nexports.isObject = isObject;\r\n\r\nfunction isFun(fn){\r\n  return Object.prototype.toString.call(fn) == \"[object Function]\";\r\n}\r\nexports.isFun = isFun;\r\n\r\nfunction isArray(arr) {\r\n  return Object.prototype.toString.call(arr) == \"[object Array]\";\r\n}\r\nexports.isArray = isArray;\r\n\r\nfunction isString(str){\r\n  return Object.prototype.toString.call(str) == \"[object String]\";\r\n}\r\nexports.isString = isString;\r\n\r\nfunction isNumber(num){\r\n  return Object.prototype.toString.call(num) == \"[object Number]\";\r\n}\r\nexports.isNumber = isNumber;\r\n\r\nfunction isDate(date){\r\n  return date instanceof Date;\r\n}\r\nexports.isDate = isDate\r\n\r\n/** 计算某年某月有多少天\r\n */\r\nfunction getDaysInYearMonth(year, month, day){\r\n  day = day || 0;\r\n  return new Date(year, month, day);\r\n}\r\nexports.getDaysInYearMonth = getDaysInYearMonth;\r\n\r\n// 获取目标月数\r\nfunction getTargetDate(date, day){\r\n  var myDate = new Date();\r\n  if(isDate(date)){\r\n    myDate = date;\r\n  }else if(isNumber(date)){\r\n    day = date;\r\n  }\r\n  if(day){\r\n    var d = myDate.getDate() + day;\r\n    myDate = new Date(myDate.setDate(d));\r\n  }\r\n  return {\r\n    year : myDate.getFullYear(),\r\n    week : myDate.getDay(),\r\n    month : myDate.getMonth() + 1,\r\n    day : myDate.getDate(),\r\n    hour : myDate.getHours(),\r\n    minute : myDate.getMinutes(),\r\n    second : myDate.getSeconds(),\r\n    date : myDate,\r\n  }\r\n}\r\nexports.getTargetDate = getTargetDate;\r\n\r\n//兼IE6~8 indexOf()\r\nif ( !Array.prototype.indexOf ) {\r\n  Array.prototype.indexOf = function ( ele ) {\r\n      // 获取数组长度\r\n      var len = this.length;\r\n      // 检查值为数字的第二个参数是否存在，默认值为0\r\n      var fromIndex = Number( arguments[ 1 ] ) || 0;\r\n      // 当第二个参数小于0时，为倒序查找，相当于查找索引值为该索引加上数组长度后的值\r\n      if ( fromIndex < 0 ) {\r\n          fromIndex += len;\r\n      }\r\n      // 从fromIndex起循环数组\r\n      while ( fromIndex < len ) {\r\n          // 检查fromIndex是否存在且对应的数组元素是否等于ele\r\n          if ( fromIndex in this && this[ fromIndex ] === ele ) {\r\n              return fromIndex;\r\n          }\r\n          fromIndex++;\r\n      }\r\n      // 当数组长度为0时返回不存在的信号：-1\r\n      return -1;\r\n  }\r\n}\r\n//兼IE6~8 forEach()\r\nif ( !Array.prototype.forEach ) {\r\n  Array.prototype.forEach = function forEach( callback ) {\r\n      // 获取数组长度\r\n      var len = this.length;\r\n      if ( typeof callback != \"function\" ) {\r\n          throw new TypeError();\r\n      }\r\n      // thisArg为callback 函数的执行上下文环境\r\n      var thisArg = arguments[ 1 ];\r\n      for ( var i = 0; i < len; i++ ) {\r\n          if ( i in this ) {\r\n              // callback函数接收三个参数：当前项的值、当前项的索引和数组本身\r\n              callback.call( thisArg, this[ i ], i, this );\r\n          }\r\n      }\r\n  }\r\n}\r\n//兼IE6~8 map()\r\nif ( !Array.prototype.map ) {\r\n  Array.prototype.map = function ( callback ) {\r\n      // 获取数组长度\r\n      var len = this.length;\r\n      if ( typeof callback != \"function\" ) {\r\n          throw new TypeError();\r\n      }\r\n      // 创建跟原数组相同长度的新数组，用于承载经回调函数修改后的数组元素\r\n      var newArr = new Array( len );\r\n      // thisArg为callback 函数的执行上下文环境\r\n      var thisArg = arguments[ 1 ];\r\n      for ( var i = 0; i < len; i++ ) {\r\n          if ( i in this ) {\r\n              newArr[ i ] = callback.call( thisArg, this[ i ], i, this );\r\n          }\r\n      }\r\n      return newArr;\r\n  }\r\n}\r\n//兼IE6~8 filter()\r\nif ( !Array.prototype.filter ) {\r\n  Array.prototype.filter = function ( callback ) {\r\n      // 获取数组长度\r\n      var len = this.length;\r\n      if ( typeof callback != \"function\" ) {\r\n          throw new TypeError();\r\n      }\r\n      // 创建新数组，用于承载经回调函数修改后的数组元素\r\n      var newArr = new Array();\r\n      // thisArg为callback 函数的执行上下文环境\r\n      var thisArg = arguments[ 1 ];\r\n      for ( var i = 0; i < len; i++ ) {\r\n          if ( i in this ) {\r\n              if ( callback.call( thisArg, this[ i ], i, this ) ) {\r\n                  newArr.push( val );\r\n              }\r\n          }\r\n      }\r\n      return newArr;\r\n  }\r\n}\r\n//兼IE6~8 some()\r\nif ( !Array.prototype.some ) {\r\n  Array.prototype.some = function ( callback ) {\r\n      // 获取数组长度\r\n      var len = this.length;\r\n      if ( typeof callback != \"function\" ) {\r\n          throw new TypeError();\r\n      }\r\n      // thisArg为callback 函数的执行上下文环境\r\n      var thisArg = arguments[ 1 ];\r\n      for ( var i = 0; i < len; i++ ) {\r\n          if ( i in this && callback.call( thisArg, this[ i ], i, this ) ) {\r\n              return true;\r\n          }\r\n      }\r\n      return false;\r\n  }\r\n}\r\n//兼IE6~8 every()\r\nif ( !Array.prototype.every ) {\r\n  Array.prototype.every = function ( callback ) {\r\n      // 获取数组长度\r\n      var len = this.length;\r\n      if ( typeof callback != \"function\" ) {\r\n          throw new TypeError();\r\n      }\r\n      // thisArg为callback 函数的执行上下文环境\r\n      var thisArg = arguments[ 1 ];\r\n      for ( var i = 0; i < len; i++ ) {\r\n          if ( i in this && !callback.call( thisArg, this[ i ], i, this ) ) {\r\n              return false;\r\n          }\r\n      }\r\n      return true;\r\n  }\r\n}\r\n\r\nif (!Object.keys) {\r\n  Object.keys = (function () {\r\n    var hasOwnProperty = Object.prototype.hasOwnProperty,\r\n        hasDontEnumBug = !({toString: null}).propertyIsEnumerable('toString'),\r\n        dontEnums = [\r\n          'toString',\r\n          'toLocaleString',\r\n          'valueOf',\r\n          'hasOwnProperty',\r\n          'isPrototypeOf',\r\n          'propertyIsEnumerable',\r\n          'constructor'\r\n        ],\r\n        dontEnumsLength = dontEnums.length;\r\n\r\n    return function (obj) {\r\n      if (typeof obj !== 'object' && typeof obj !== 'function' || obj === null) \r\n        throw new TypeError('Object.keys called on non-object');\r\n\r\n      var result = [];\r\n      for (var prop in obj) {\r\n        if (hasOwnProperty.call(obj, prop)) result.push(prop);\r\n      }\r\n\r\n      if (hasDontEnumBug) {\r\n        for (var i=0; i < dontEnumsLength; i++) {\r\n          if (hasOwnProperty.call(obj, dontEnums[i])) result.push(dontEnums[i]);\r\n        }\r\n      }\r\n      return result;\r\n    }\r\n  })()\r\n};\r\n\r\nif (!Object.assign) {\r\n  Object.assign = function assign(target, varArgs) {\r\n    if (target == null) {\r\n      throw new TypeError('Cannot convert undefined or null to object');\r\n    }\r\n    var to = Object(target);\r\n    for (var index = 1; index < arguments.length; index++) {\r\n      var nextSource = arguments[index];\r\n      if (nextSource != null) {\r\n        for (var nextKey in nextSource) {\r\n          if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\r\n            to[nextKey] = nextSource[nextKey];\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return to;\r\n  }\r\n}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","var { CronParser } = require(\"./cronParser.js\");\r\nvar { CustomTimer } = require(\"./customTimer.js\");\r\nvar { isString , isObject, getDaysInYearMonth, getTargetDate} = require(\"./utils.js\");\r\n\r\nexports.CronActuator = CronActuator;\r\n\r\nfunction CronActuator(opts, cb){\r\n  if(!(this instanceof CronActuator)){\r\n    return new CronActuator(opts);\r\n  }\r\n  this.opts = {};\r\n  this.type; // 定时任务类型 1:纯 timeout/interval 定时；2: 纯cron 定时， 3:带 timeout 的 cron 定时\r\n  this.timers = [];\r\n  this.cb = cb;\r\n  this.wake = opts.wake || 3600000;  // 唤醒的间隔，以天为跨度\r\n  this.init(opts);\r\n}\r\n\r\nCronActuator.prototype.init = function(opts){\r\n  if(isString(opts)){\r\n    this.type = 2;\r\n    this.opts = new CronParser(opts);\r\n    this.opts.timeout = null;\r\n    this.opts.interval = null; \r\n  }\r\n  if(isObject(opts)){\r\n    var timerObj = {};\r\n    if(opts.cron){\r\n      this.type = 3;\r\n      timerObj = new CronParser(opts.cron);\r\n      if( !opts.timeout ){  // 没有延时的 cron 当做纯cron\r\n        this.type = 2;\r\n      }\r\n      this.opts.interval = null; \r\n    }else{\r\n      this.type = 1;\r\n    }\r\n    this.opts = Object.assign(opts, timerObj);\r\n  }\r\n}\r\nCronActuator.prototype.start = function(){\r\n  // 是否是真实的回调，考虑到cron 的时候，需要延时，还有唤醒定时任务的定时任务\r\n  this.opts.real = this.type === 1; \r\n  this.createTimer(this.opts, 1);\r\n}\r\n/** \r\n * type : 常见类型 1： 原始参数创建；2：通过计算创建\r\n*/\r\nCronActuator.prototype.createTimer = function(opts, type){\r\n  var self = this;\r\n  var timer = new CustomTimer(opts, function(){\r\n    self.createNextTimer();\r\n    // 不含 cron 的定时和 cron 非延时定时器 才执行回调，\r\n    if(opts.real){\r\n      self.cb(opts);\r\n    }\r\n  });\r\n  this.timers.push(timer);\r\n  timer.start();\r\n} \r\nCronActuator.prototype.createNextTimer = function(){\r\n  var self = this;\r\n  var opts = this.opts;\r\n  if(self.type == 1){\r\n    return;\r\n  }\r\n  if(opts.timeEnum){\r\n    var nextTime = calcNextTime(opts, self.wake);\r\n    //console.log(nextTime);\r\n    var data = {\r\n      timeout : nextTime.timeLen,\r\n      interval : 0,\r\n      real : nextTime.real,\r\n    }\r\n    this.createTimer(data, 2);\r\n  }\r\n}\r\nCronActuator.prototype.stop = CronActuator.prototype.clearAll = function(){\r\n  if(this.timers && this.timers.length){\r\n    var i = this.timers.length -1;\r\n    for(; i >= 0; i--){\r\n      var timer = this.timers[i];\r\n      this.cancel(timer);\r\n    }\r\n  }\r\n}\r\nCronActuator.prototype.cancel = function(timer, cb){\r\n  if(timer){\r\n    var timers = this.timers;\r\n    var idx = timers.indexOf(timer);\r\n    idx >= 0 && timers.splice(idx, 1);\r\n    timer && timer.clear();\r\n  }\r\n}\r\n\r\n// 计算下一个定时任务的时间\r\nfunction calcNextTime(opts, maxTime){\r\n  var times = opts.timeEnum;\r\n  var months = times.month;\r\n  var weeks = times.week;\r\n  var days = times.day;\r\n  var hours = times.hour;\r\n  var minutes = times.minute;\r\n  var seconds = times.second;\r\n  var nowDate = getTargetDate();\r\n  var nextDay = getTargetDate(parseInt(maxTime/3600000));\r\n\r\n  // 从月份开始找最后一个相等的\r\n  var arr = [\"second\", \"minute\", \"hour\", \"day\", \"month\"];\r\n  var i = arr.length - 1;  // 排除星期\r\n  for(; i >= 0; i--){\r\n    var item = times[arr[i]].times;\r\n    if(item.indexOf(nowDate[arr[i]]) < 0){\r\n      break;\r\n    }\r\n  }\r\n  var real = false;\r\n  var res = [];\r\n  var second, minute, hour, day, month;\r\n  for(var n = 0; n < arr.length; n++){\r\n    var item = times[arr[n]].times;\r\n    if(n < i){ // 从月开始第一个不在范围的 \r\n      res.push(item[0]);\r\n    }else{\r\n      if(arr[n] == \"second\"){\r\n        second = getTimeInArea(seconds, nowDate.second, 60, 1);\r\n        res.push(second[0]);\r\n      }\r\n      if(arr[n] == \"minute\"){\r\n        minute = getTimeInArea(minutes, nowDate.minute, 60, (second ? second[1] : 1));\r\n        res.push(minute[0]);\r\n      }\r\n      if(arr[n] == \"hour\"){\r\n        hour = getTimeInArea(hours, nowDate.hour, 24, (minute ? minute[1] : 1));\r\n        res.push(hour[0]);\r\n      }\r\n      if(arr[n] == \"day\"){\r\n        // 天数是不准的，需要精确计算\r\n        var max = getDaysInYearMonth(nowDate.year, nowDate.month).getDate();\r\n        var day = getTimeInArea(days, nowDate.day, max + 1, (hour ? hour[1] : 1)); \r\n        res.push(day[0]);\r\n      }\r\n      if(arr[n] == \"month\"){\r\n        month = getTimeInArea(months, nowDate.month, 13, (day ? day[1] : 1));\r\n        res.push(month[0]);\r\n      }\r\n    }\r\n  }\r\n  var time = new Date(nowDate.year + (month ? month[1] : 1), res[4]-1, res[3], res[2], res[1], res[0]);\r\n  //console.log(time);\r\n  // 是一天内的\r\n  var validTime = time.getTime() <= nextDay.date.getTime();\r\n  if( weeks.times.indexOf(time.getDay()) > -1 && validTime){ \r\n    maxTime = time.getTime() - nowDate.date.getTime();\r\n    real = true;\r\n    /* if(maxTime < 1000){\r\n      setTimeout(function() {\r\n        maxTime = calcNextTime(opts, maxTime).timeLen;\r\n      }, 1000);\r\n    } */\r\n    \r\n  }\r\n  // 都是超过时间范围的，直接返回最大值\r\n  return { timeLen : maxTime, real : real} //[maxTime, real];\r\n}\r\n\r\n// 获取 时间区间\r\nfunction getTimeInArea(opts, val, max, increase){\r\n  var times = opts.times;\r\n  var step = parseInt((val + increase) / max);\r\n  var newVal = parseInt((val + increase) % max);\r\n  for(var i = 0; i < times.length; i++){\r\n    if(times[i] >= newVal && newVal < max){ // 后面这个判断主要是因为月份是动态的，比如 2 月最多只有 29天，枚举里面却可以有 31 天\r\n      return [times[i], step];\r\n    }\r\n  }\r\n  return [times[0], step + 1];\r\n}\r\n\r\n\r\n\r\n/*\r\n\r\nhttps://www.cnblogs.com/yanghj010/p/10875151.html\r\n\r\n不受支持的 Cron 功能\r\n目前，不支持W（最近的工作日）和L（每月/每周的最后一天）， 包括#（每月的第 n 个工作日）。\r\nL W C #\r\n流行的 cron 实现支持的大多数其他功能应该可以正常工作.\r\n\r\n字段\t允许值\t允许的特殊字符\r\n秒（Seconds）\t0~59的整数\t, - * /    四个字符\r\n分（Minutes）\t0~59的整数\t, - * /    四个字符\r\n小时（Hours）\t0~23的整数\t, - * /    四个字符\r\n日期（DayofMonth）\t1~31的整数（但是你需要考虑你月的天数）\t,- * ? / L W C     八个字符\r\n月份（Month）\t1~12的整数或者 JAN-DEC\t, - * /    四个字符\r\n星期（DayofWeek）\t1~7的整数或者 SUN-SAT （1=SUN）\t, - * ? / L C #     八个字符\r\n年(可选，留空)（Year）\t1970~2099\t, - * /    四个字符\r\n\r\n*/"],"names":["root","factory","exports","module","define","amd","self","parserItem","item","arr","indexOf","times","split","start","parseInt","end","Math","min","x","push","step","normalizaTime","max","data","i","length","sort","a","b","CronParser","cron","this","timeArea","crons","rex","cronList","n","test","concat","cronParse","timeEnum","second","minute","hour","day","month","week","calcTime","CustomTimer","opts","cb","timeout","interval","prototype","setTimeout","fn","time","setInterval","clear","clearInterval","clearTimeout","immedi","isNumber","num","Object","toString","call","isDate","date","Date","hasOwnProperty","hasDontEnumBug","dontEnums","dontEnumsLength","isObject","obj","isFun","isArray","isString","str","getDaysInYearMonth","year","getTargetDate","myDate","d","getDate","setDate","getFullYear","getDay","getMonth","getHours","getMinutes","getSeconds","Array","ele","len","fromIndex","Number","arguments","forEach","callback","TypeError","thisArg","map","newArr","filter","val","some","every","keys","propertyIsEnumerable","result","prop","assign","target","varArgs","to","index","nextSource","nextKey","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","require","CronActuator","type","timers","wake","init","getTimeInArea","increase","newVal","timerObj","real","createTimer","timer","createNextTimer","nextTime","maxTime","months","weeks","days","hours","minutes","seconds","nowDate","nextDay","res","validTime","getTime","timeLen","calcNextTime","stop","clearAll","cancel","idx","splice"],"sourceRoot":""}